// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace vac_master.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Huascar\Desktop\5toC\Prog1\vaccine-sys\vaccination-system\vac-master\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Huascar\Desktop\5toC\Prog1\vaccine-sys\vaccination-system\vac-master\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Huascar\Desktop\5toC\Prog1\vaccine-sys\vaccination-system\vac-master\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Huascar\Desktop\5toC\Prog1\vaccine-sys\vaccination-system\vac-master\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Huascar\Desktop\5toC\Prog1\vaccine-sys\vaccination-system\vac-master\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Huascar\Desktop\5toC\Prog1\vaccine-sys\vaccination-system\vac-master\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Huascar\Desktop\5toC\Prog1\vaccine-sys\vaccination-system\vac-master\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Huascar\Desktop\5toC\Prog1\vaccine-sys\vaccination-system\vac-master\_Imports.razor"
using vac_master;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Huascar\Desktop\5toC\Prog1\vaccine-sys\vaccination-system\vac-master\_Imports.razor"
using vac_master.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Huascar\Desktop\5toC\Prog1\vaccine-sys\vaccination-system\vac-master\Pages\AgregarVacuna.razor"
using vac_master.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Huascar\Desktop\5toC\Prog1\vaccine-sys\vaccination-system\vac-master\Pages\AgregarVacuna.razor"
using vac_master.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Huascar\Desktop\5toC\Prog1\vaccine-sys\vaccination-system\vac-master\Pages\AgregarVacuna.razor"
using System.Linq;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/AgregarVacuna")]
    public partial class AgregarVacuna : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 153 "C:\Users\Huascar\Desktop\5toC\Prog1\vaccine-sys\vaccination-system\vac-master\Pages\AgregarVacuna.razor"
       
    string nombre, apellido, telefono, message, fechaNac;
    string _cedula;
    bool SinRegistro = false;
    bool ConRegistro = false;
    string DropId = "1";
    string Drop2Id = "1";

    List<Vacunados> Vacunacion = new List<Vacunados>();
    Dataprocess Data = new Dataprocess();
    Persona persona = new Persona();
    covid19Context db = new covid19Context();
    List<DropdownItems> Drop = null;
    List<DropdownItems> Drop2 = null;

    public void Next()
    {
        //funcion que valida si la cedula esta en el sistema
        var query = from Persona in db.Persona
                    where Persona.Cedula == _cedula
                    select Persona;
        if (query.Count() == 0)
        {
            SinRegistro = true;
        }
        else if (query.Count() == 1)
        {
            SinRegistro = false;
            Persona registro = query.First();
            persona.Id = registro.Id;
            persona.Nombre = registro.Nombre;
            persona.Apellido = registro.Apellido;
            persona.Cedula = registro.Cedula;
            persona.Telefono = registro.Telefono;
            persona.FechaNac = registro.FechaNac;

            var vacunas = from Vacunados in db.Vacunados
                          where Vacunados.IdPersona == persona.Id
                          select Vacunados;
            foreach (var i in vacunas)
            {
                Vacunacion.Add(i);
            }

            ConRegistro = true;

        }

        //procesamos el futuro dropdownlist
        Drop = (from d in db.Vacuna
                select new DropdownItems
                {
                    Id = d.Id,
                    Nombre = d.NombreVacuna
                }).ToList();

        Drop2 = (from d in db.Provincias
                 select new DropdownItems
                 {
                     Id = d.Id,
                     Nombre = d.Provincia
                 }).ToList();

    }
    //funcion que agrega usuarios sin un registro previo 
    public void AgregarVacunado()
    {
        try
        {
            persona.Nombre = nombre;
            persona.Apellido = apellido;
            persona.Cedula = _cedula;
            persona.Telefono = telefono;
            persona.FechaNac = fechaNac;
            Data.AddPersona(persona);

            var query = from Persona in db.Persona
                        where Persona.Cedula == _cedula
                        select Persona;

            Persona registro = query.First();

            Vacunados obj = new Vacunados();
            obj.IdPersona = registro.Id;
            obj.IdVacuna = int.Parse(DropId);
            obj.IdProvincia = int.Parse(Drop2Id);

            Data.AddVacunado(obj);
            message = "Registro agregado con exito!";
        }
        catch (Exception)
        {

            message = "No se puedo completar operacion";
        }

    }
    //funcion que agrega una nueva dosis a un usuario ya vacunado
    public void AgregarDosis()
    {
        try
        {
            Vacunados obj = new Vacunados();
            obj.IdPersona = persona.Id;
            obj.IdVacuna = int.Parse(DropId);
            obj.IdProvincia = int.Parse(Drop2Id);

            Data.AddVacunado(obj);
            message = "Dosis agregada con exito!";
        }
        catch (Exception)
        {

            message = "Fallo al registrar la nueva dosis";
        }

    }


#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
